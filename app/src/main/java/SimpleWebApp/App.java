/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package SimpleWebApp;

import java.util.*;

import spark.ModelAndView;
import spark.template.mustache.MustacheTemplateEngine;
import static spark.Spark.get;
import static spark.Spark.post;
import static spark.Spark.port;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;



public class App {
    public String getGreeting() {
        return "SIMPLE WEB APP";
    }

    public static void main(String[] args) {
        System.out.println(new App().getGreeting());

        get("/", (req, res) -> "SIMPLE WEB APP");

        get("/compute",
        (rq, rs) -> {
        Map<String, String> map = new HashMap<String, String>();
        map.put("result", "not computed yet!");
        return new ModelAndView(map, "compute.mustache");
        },
        new MustacheTemplateEngine());

        post("/compute", (req, res) -> {
            
            String input1 = req.queryParams("input1");
            java.util.Scanner sc1 = new java.util.Scanner(input1);
            sc1.useDelimiter("[;\r\n]+");
            int [] girilen_degerler = new int[10];
            while (sc1.hasNext())
            {
                for(int i=0;i<girilen_degerler.length;i++)
                {
                    girilen_degerler[i]=Integer.parseInt(sc1.next().replaceAll("\\s",""));
                }
            }
            sc1.close();

            String input2 = req.queryParams("input2").replaceAll("\\s","");
            int input2AsInt = Integer.parseInt(input2);
            boolean result = App.EnBuyukElemaniBulma(girilen_degerler, input2AsInt);
            Map<String, Boolean> map = new HashMap<String, Boolean>();
            map.put("result", result);
            return new ModelAndView(map, "compute.mustache");
            }, new MustacheTemplateEngine());
           
    }
    public static boolean EnBuyukElemaniBulma(int array[], int buyuk_deger)
    {
        System.out.println("Girilen Dizi: " + Arrays.toString(array));
        
        if(array==null) return false;

        int temp;
        temp=array[0];
        
        for(int i=0;i<array.length;i++)
        {
            if(array[i] > temp)
            {
                temp = array[i];
            }
        }

        if(temp==buyuk_deger) return true;
        else return false;
    }
}
